--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v30,16));if v19 then local v100=v5(v83,v19);v19=nil;return v100;else return v83;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v84=(v31/((5 -3)^(v32-(2 -1))))%(2^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v84-(v84%(932 -(857 + 74))) ;else local v85=(570 -(367 + 201))^(v32-(928 -(214 + 113 + 600))) ;return (((v31%(v85 + v85))>=v85) and 1) or (0 + (877 -(282 + 595))) ;end end local function v21() local v34=1637 -(1523 + 114) ;local v35;while true do if (v34==(1 + (0 -0))) then return v35;end if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + (1066 -(68 + 997)) ;v34=1271 -(226 + 1044) ;end end end local function v22() local v36=117 -(32 + 85) ;local v37;local v38;while true do if (v36==(0 + 0)) then v37,v38=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (959 -(892 + 65)) ;v36=(352 -(87 + 263)) -1 ;end if (v36==((181 -(67 + 113)) -0)) then return (v38 * (469 -213)) + v37 ;end end end local function v23() local v39=0 + 0 ;local v40;local v41;local v42;local v43;while true do if (v39==((3 -1) -(1 + 0))) then return (v43 * (12338840 + 4438376)) + (v42 * 65536) + (v41 * (1017 -(1758 -(915 + 82)))) + v40 ;end if (v39==(952 -(802 + 150))) then v40,v41,v42,v43=v1(v16,v18,v18 + 3 );v18=v18 + 4 ;v39=2 -1 ;end end end local function v24() local v44=v23();local v45=v23();local v46=2 -1 ;local v47=(v20(v45,1 + 0 + 0 ,20) * (((774 -(201 + 571)) -0)^(1219 -(1069 + 118)))) + v44 ;local v48=v20(v45,47 -(1164 -(116 + 1022)) ,67 -(149 -113) );local v49=((v20(v45,6 + 26 )==(1 + 0)) and  -(1 -0)) or (1 + 0) ;if (v48==(791 -(368 + 423))) then if (v47==(0 -0)) then return v49 * (18 -(10 + 8)) ;else local v89=0 -0 ;while true do if (v89==(442 -(416 + 26))) then v48=(10 -7) -2 ;v46=0 + 0 ;break;end end end elseif (v48==((12858 -9237) -1574)) then return ((v47==0) and (v49 * ((439 -((1004 -(814 + 45)) + 293))/(430 -(44 + (950 -564)))))) or (v49 * NaN) ;end return v8(v49,v48-(2509 -(998 + 488)) ) * (v46 + (v47/((1 + 1)^52))) ;end local function v25(v50) local v51=0 + 0 ;local v52;local v53;while true do if (v51==2) then v53={};for v90=1, #v52 do v53[v90]=v2(v1(v3(v52,v90,v90)));end v51=2 + 1 ;end if (v51==(885 -(261 + 624))) then v52=nil;if  not v50 then local v96=0 -(1747 -(760 + 987)) ;while true do if (v96==((2993 -(1789 + 124)) -((1786 -(745 + 21)) + 60))) then v50=v23();if (v50==(1423 -(217 + 413 + 793))) then return "";end break;end end end v51=3 -2 ;end if (v51==3) then return v6(v53);end if (v51==(4 -3)) then v52=v3(v16,v18,(v18 + v50) -(1 + 0) );v18=v18 + v50 ;v51=(16 -10) -4 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=(function() return 0;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();local v60=(function() return;end)();while true do local v67=(function() return 0 -0 ;end)();while true do if (v67==(1701 -(1419 + 281))) then if (v54~=(2 -0)) then else for v101= #"]",v23() do local v102=(function() return v21();end)();if (v20(v102, #"[", #"{")==(74 -(71 + 3))) then local v105=(function() return 0 + 0 ;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();while true do if (v105~=2) then else if (v20(v107, #"{", #"/")== #"}") then v108[4 -2 ]=(function() return v60[v108[2]];end)();end if (v20(v107,2 -0 ,243 -(187 + 54) )~= #"|") then else v108[ #"gha"]=(function() return v60[v108[ #"asd"]];end)();end v105=(function() return 783 -(162 + 618) ;end)();end if (v105==0) then v106=(function() return v20(v102,2 + 0 , #"19(");end)();v107=(function() return v20(v102, #"?id=",4 + 2 );end)();v105=(function() return 1 -0 ;end)();end if ((4 -1)~=v105) then else if (v20(v107, #"xnx", #"91(")== #"[") then v108[ #"0836"]=(function() return v60[v108[ #"http"]];end)();end v55[v101]=(function() return v108;end)();break;end if (v105~=1) then else local v116=(function() return 0;end)();while true do if (v116~=(1 + 0)) then else v105=(function() return 2;end)();break;end if (v116==(1636 -(1373 + 263))) then v108=(function() return {v22(),v22(),nil,nil};end)();if (v106==0) then local v194=(function() return 1000 -(451 + 549) ;end)();local v195=(function() return;end)();while true do if (0~=v194) then else v195=(function() return 0;end)();while true do if (v195==(0 + 0)) then v108[ #"asd"]=(function() return v22();end)();v108[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v106== #":") then v108[ #"91("]=(function() return v23();end)();elseif (v106==(2 -0)) then v108[ #"asd"]=(function() return v23() -((2 -0)^(1400 -(746 + 638))) ;end)();elseif (v106== #"19(") then local v205=(function() return 0;end)();local v206=(function() return;end)();while true do if ((0 + 0)~=v205) then else v206=(function() return 0;end)();while true do if (v206~=(0 -0)) then else v108[ #"asd"]=(function() return v23() -((343 -(218 + 123))^16) ;end)();v108[ #".dev"]=(function() return v22();end)();break;end end break;end end end v116=(function() return 1;end)();end end end end end end for v103= #"}",v23() do v56[v103-#">" ]=(function() return v28();end)();end return v58;end break;end if (v67==0) then if (v54~= #"]") then else local v97=(function() return 0;end)();while true do if (v97~=(1582 -(1535 + 46))) then else for v110= #"}",v59 do local v111=(function() return 0;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if (v111==0) then local v154=(function() return 0;end)();while true do if (v154==(1 + 0)) then v111=(function() return 1 + 0 ;end)();break;end if (v154~=(560 -(306 + 254))) then else v112=(function() return 0;end)();v113=(function() return nil;end)();v154=(function() return 1;end)();end end end if (v111~=(1 + 0)) then else v114=(function() return nil;end)();while true do if (v112== #"/") then if (v113== #"[") then v114=(function() return v21()~=0 ;end)();elseif (v113==2) then v114=(function() return v24();end)();elseif (v113== #"xnx") then v114=(function() return v25();end)();end v60[v110]=(function() return v114;end)();break;end if (v112~=(0 -0)) then else local v189=(function() return 0;end)();local v190=(function() return;end)();while true do if (v189~=0) then else v190=(function() return 1467 -(899 + 568) ;end)();while true do if (v190==0) then v113=(function() return v21();end)();v114=(function() return nil;end)();v190=(function() return 1;end)();end if (v190==1) then v112=(function() return  #"|";end)();break;end end break;end end end end break;end end end v58[ #"xxx"]=(function() return v21();end)();v97=(function() return 2 + 0 ;end)();end if (v97~=(4 -2)) then else v54=(function() return 605 -(268 + 335) ;end)();break;end if (v97~=(290 -(60 + 230))) then else v59=(function() return v23();end)();v60=(function() return {};end)();v97=(function() return 1;end)();end end end if (v54==(572 -(426 + 146))) then local v98=(function() return 0 + 0 ;end)();local v99=(function() return;end)();while true do if (v98~=(1456 -(282 + 1174))) then else v99=(function() return 811 -(569 + 242) ;end)();while true do if (v99==2) then v54=(function() return  #":";end)();break;end if ((0 -0)==v99) then v55=(function() return {};end)();v56=(function() return {};end)();v99=(function() return 1 + 0 ;end)();end if ((1025 -(706 + 318))==v99) then v57=(function() return {};end)();v58=(function() return {v55,v56,nil,v57};end)();v99=(function() return 1253 -(721 + 530) ;end)();end end break;end end end v67=(function() return 1;end)();end end end end local function v29(v61,v62,v63) local v64=v61[(883 + 389) -(945 + 326) ];local v65=v61[5 -3 ];local v66=v61[3];return function(...) local v68=v64;local v69=v65;local v70=v66;local v71=v27;local v72=2 -1 ;local v73= -(3 -2);local v74={};local v75={...};local v76=v12("#",...) -(701 -(271 + 429)) ;local v77={};local v78={};for v86=0 + 0 ,v76 do if (v86>=v70) then v74[v86-v70 ]=v75[v86 + (1501 -(1408 + 92)) ];else v78[v86]=v75[v86 + (1087 -(461 + 625)) ];end end local v79=(v76-v70) + (1289 -(993 + 295)) ;local v80;local v81;while true do v80=v68[v72];v81=v80[305 -(244 + 60) ];if (v81<=(14 + 3)) then if (v81<=(1 + 7)) then if (v81<=(1174 -(418 + 753))) then if (v81<=(1 + 0)) then if ((4951==4951) and (v81==(0 + 0))) then local v117=0 + 0 + 0 ;local v118;local v119;while true do if (v117==(1 + 0)) then v78[v118 + 1 ]=v119;v78[v118]=v119[v80[533 -(406 + 123) ]];break;end if (v117==0) then v118=v80[2 + 0 ];v119=v78[v80[1772 -(1749 + 20) ]];v117=1 + 0 ;end end else local v120=1322 -(1249 + 73) ;local v121;while true do if (v120==(0 + 0 + 0)) then v121=v80[269 -(176 + 91) ];v78[v121](v78[v121 + (1146 -(466 + 679)) ]);break;end end end elseif ((v81==(4 -2)) or (3708<1752)) then local v122=0 -0 ;local v123;while true do if (v122==(1900 -((639 -(43 + 490)) + 1794))) then v123=v80[2 + 0 ];v78[v123]=v78[v123](v13(v78,v123 + 1 + (733 -(711 + 22)) ,v80[1 + 2 ]));break;end end else v78[v80[5 -(11 -8) ]]=v78[v80[10 -7 ]];end elseif (v81<=(13 -8)) then if (v81>(118 -((863 -(240 + 619)) + 110))) then v72=v80[7 -(1 + 3) ];else for v155=v80[586 -(57 + 527) ],v80[1430 -(41 + 1386) ] do v78[v155]=nil;end end elseif ((v81<=(109 -((26 -9) + 6 + 80))) or (972>=4068)) then v78[v80[2 + 0 ]]=v78[v80[6 -3 ]][v80[11 -7 ]];elseif (v81==(173 -(122 + 44))) then v78[v80[2 -0 ]]={};elseif (v78[v80[6 -4 ]]==v80[4 + 0 ]) then v72=v72 + 1 + 0 ;else v72=v80[5 -2 ];end elseif (v81<=12) then if ((493<3893) and (v81<=(75 -(30 + 35)))) then if (v81==(956 -((1989 -(1344 + 400)) + 702))) then if ((v80[2 + 0 ]==v78[v80[1261 -(1043 + 214) ]]) or (1473>=3332)) then v72=v72 + (1899 -(260 + 1638)) ;else v72=v80[11 -8 ];end else local v129=v80[1214 -(323 + (1294 -(255 + 150))) ];v78[v129]=v78[v129](v78[v129 + 1 + 0 ]);end elseif ((v81==(22 -11)) or (4051<=1157)) then local v131=0 -0 ;local v132;while true do if (v131==(0 -0)) then v132=v80[582 -(361 + 219) ];v78[v132]=v78[v132](v13(v78,v132 + (321 -(53 + 211 + 56)) ,v80[1 + 2 ]));break;end end else local v133=v80[415 -(9 + 6 + 398) ];do return v13(v78,v133,v133 + v80[985 -(18 + 964) ] );end end elseif (v81<=(52 -38)) then if (v81==(8 + 5)) then v78[v80[2 + (0 -0) ]]={};else v78[v80[(2751 -1899) -(20 + 830) ]]=v78[v80[3 + 0 ]];end elseif (v81<=(141 -(116 + 10))) then local v137=0 + 0 ;local v138;while true do if ((604<2881) and (v137==(1463 -(1404 + (1798 -(404 + 1335)))))) then v138=v80[(1146 -(183 + 223)) -(542 + 196) ];v78[v138](v78[v138 + 1 ]);break;end end elseif (v81==(34 -18)) then v78[v80[1 + 1 ]]=v78[v80[2 + 1 ]][v80[2 + 2 ]];else for v184=v80[4 -2 ],v80[7 -4 ] do v78[v184]=nil;end end elseif ((v81<=((105 -18) -61)) or (900==3377)) then if (v81<=(48 -27)) then if (v81<=(1570 -(1126 + 425))) then if (v81>(423 -(118 + 191 + 96))) then v72=v80[11 -8 ];elseif ((4459>591) and v78[v80[1123 -(118 + 361 + 642) ]]) then v72=v72 + (2 -1) ;else v72=v80[(717 -(10 + 327)) -(142 + 235) ];end elseif (v81>(90 -70)) then v78[v80[2]][v80[1 + 2 ]]=v78[v80[4]];else v78[v80[979 -(553 + 424) ]]=v80[5 -2 ];end elseif (v81<=(17 + 6)) then if ((3398>=2395) and (v81>22)) then do return v78[v80[2 + 0 ]];end else local v144=0 + 0 ;local v145;while true do if (v144==(0 -0)) then v145=v80[2 + 0 ];v78[v145]=v78[v145](v78[v145 + 1 + 0 + (338 -(118 + 220)) ]);break;end end end elseif (v81<=(8 + 16)) then if (v80[1 + 1 ]==v78[v80[3 + 1 ]]) then v72=v72 + 1 ;else v72=v80[6 -3 ];end elseif ((v81==25) or (2183>=2824)) then if (v78[v80[5 -3 ]]==v80[769 -(574 + (640 -(108 + 341))) ]) then v72=v72 + (2 -1) ;else v72=v80[1 + 0 + 2 ];end else v78[v80[2 + (0 -0) ]]=v80[14 -11 ];end elseif (v81<=((2277 -(711 + 782)) -(239 + 514))) then if (v81<=(10 + 18)) then if (v81==(1356 -(797 + 532))) then v78[v80[1792 -(573 + 1217) ]]=v63[v80[(5 -2) + (469 -(270 + 199)) ]];else do return;end end elseif ((1936==1936) and (v81<=(80 -51))) then v78[v80[1 + 1 ]]=v63[v80[(2 + 4) -3 ]];elseif ((v81==(1232 -(373 + (2648 -(580 + 1239))))) or (4832<4313)) then if v78[v80[733 -(476 + 255) ]] then v72=v72 + ((5 -3) -1) ;else v72=v80[1133 -(369 + 761) ];end else do return;end end elseif (v81<=(20 + 13)) then if ((4088>3874) and (v81>(57 -25))) then v78[v80[3 -(1 + 0) ]][v80[241 -(64 + 174) ]]=v80[1 + 3 ];else do return v78[v80[2]];end end elseif (v81<=((2 + 47) -15)) then v78[v80[338 -(144 + 192) ]][v80[219 -(42 + 174) ]]=v78[v80[4 + 0 ]];elseif (v81==(132 -(5 + 6 + 86))) then v78[v80[4 -(4 -2) ]][v80[2 + 1 + (1167 -(645 + 522)) ]]=v80[9 -5 ];else local v170=0 + 0 ;local v171;local v172;while true do if ((4332==4332) and (v170==(1504 -((2153 -(1010 + 780)) + 1141)))) then v171=v80[1582 -(1183 + 397) ];v172=v78[v80[8 -(5 + 0) ]];v170=2 -1 ;end if ((1 + (0 -0))==v170) then v78[v171 + 1 + 0 ]=v172;v78[v171]=v172[v80[1979 -(1913 + (181 -119)) ]];break;end end end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
